#include "KeyToString.h"
std::string ImGuiKey_to_string(ImGuiKey key)
{
	switch (key)
	{
		case ImGuiKey_Tab: return "Tab";
		case ImGuiKey_LeftArrow: return "LeftArrow";
		case ImGuiKey_RightArrow: return "RightArrow";
		case ImGuiKey_UpArrow: return "UpArrow";
		case ImGuiKey_DownArrow: return "DownArrow";
		case ImGuiKey_PageUp: return "PageUp";
		case ImGuiKey_PageDown: return "PageDown";
		case ImGuiKey_Home: return "Home";
		case ImGuiKey_End: return "End";
		case ImGuiKey_Insert: return "Insert";
		case ImGuiKey_Delete: return "Delete";
		case ImGuiKey_Backspace: return "Backspace";
		case ImGuiKey_Space: return "Space";
		case ImGuiKey_Enter: return "Enter";
		case ImGuiKey_Escape: return "Escape";
		case ImGuiKey_LeftCtrl: return "LeftCtrl";
		case ImGuiKey_LeftShift: return "LeftShift";
		case ImGuiKey_LeftAlt: return "LeftAlt";
		case ImGuiKey_LeftSuper: return "LeftSuper";
		case ImGuiKey_RightCtrl: return "RightCtrl";
		case ImGuiKey_RightShift: return "RightShift";
		case ImGuiKey_RightAlt: return "RightAlt";
		case ImGuiKey_RightSuper: return "RightSuper";
		case ImGuiKey_Menu: return "Menu";
		case ImGuiKey_0: return "0";
		case ImGuiKey_1: return "1";
		case ImGuiKey_2: return "2";
		case ImGuiKey_3: return "3";
		case ImGuiKey_4: return "4";
		case ImGuiKey_5: return "5";
		case ImGuiKey_6: return "6";
		case ImGuiKey_7: return "7";
		case ImGuiKey_8: return "8";
		case ImGuiKey_9: return "9";
		case ImGuiKey_A: return "A";
		case ImGuiKey_B: return "B";
		case ImGuiKey_C: return "C";
		case ImGuiKey_D: return "D";
		case ImGuiKey_E: return "E";
		case ImGuiKey_F: return "F";
		case ImGuiKey_G: return "G";
		case ImGuiKey_H: return "H";
		case ImGuiKey_I: return "I";
		case ImGuiKey_J: return "J";
		case ImGuiKey_K: return "K";
		case ImGuiKey_L: return "L";
		case ImGuiKey_M: return "M";
		case ImGuiKey_N: return "N";
		case ImGuiKey_O: return "O";
		case ImGuiKey_P: return "P";
		case ImGuiKey_Q: return "Q";
		case ImGuiKey_R: return "R";
		case ImGuiKey_S: return "S";
		case ImGuiKey_T: return "T";
		case ImGuiKey_U: return "U";
		case ImGuiKey_V: return "V";
		case ImGuiKey_W: return "W";
		case ImGuiKey_X: return "X";
		case ImGuiKey_Y: return "Y";
		case ImGuiKey_Z: return "Z";
		case ImGuiKey_F1: return "F1";
		case ImGuiKey_F2: return "F2";
		case ImGuiKey_F3: return "F3";
		case ImGuiKey_F4: return "F4";
		case ImGuiKey_F5: return "F5";
		case ImGuiKey_F6: return "F6";
		case ImGuiKey_F7: return "F7";
		case ImGuiKey_F8: return "F8";
		case ImGuiKey_F9: return "F9";
		case ImGuiKey_F10: return "F10";
		case ImGuiKey_F11: return "F11";
		case ImGuiKey_F12: return "F12";
		case ImGuiKey_Apostrophe: return "Apostrophe";
		case ImGuiKey_Comma: return "Comma";
		case ImGuiKey_Minus: return "Minus";
		case ImGuiKey_Period: return "Period";
		case ImGuiKey_Slash: return "Slash";
		case ImGuiKey_Semicolon: return "Semicolon";
		case ImGuiKey_Equal: return "Equal";
		case ImGuiKey_LeftBracket: return "LeftBracket";
		case ImGuiKey_Backslash: return "Backslash";
		case ImGuiKey_RightBracket: return "RightBracket";
		case ImGuiKey_GraveAccent: return "GraveAccent";
		case ImGuiKey_CapsLock: return "CapsLock";
		case ImGuiKey_ScrollLock: return "ScrollLock";
		case ImGuiKey_NumLock: return "NumLock";
		case ImGuiKey_PrintScreen: return "PrintScreen";
		case ImGuiKey_Pause: return "Pause";
		case ImGuiKey_Keypad0: return "Keypad0";
		case ImGuiKey_Keypad1: return "Keypad1";
		case ImGuiKey_Keypad2: return "Keypad2";
		case ImGuiKey_Keypad3: return "Keypad3";
		case ImGuiKey_Keypad4: return "Keypad4";
		case ImGuiKey_Keypad5: return "Keypad5";
		case ImGuiKey_Keypad6: return "Keypad6";
		case ImGuiKey_Keypad7: return "Keypad7";
		case ImGuiKey_Keypad8: return "Keypad8";
		case ImGuiKey_Keypad9: return "Keypad9";
		case ImGuiKey_KeypadDecimal: return "KeypadDecimal";
		case ImGuiKey_KeypadDivide: return "KeypadDivide";
		case ImGuiKey_KeypadMultiply: return "KeypadMultiply";
		case ImGuiKey_KeypadSubtract: return "KeypadSubtract";
		case ImGuiKey_KeypadAdd: return "KeypadAdd";
		case ImGuiKey_KeypadEnter: return "KeypadEnter";
		case ImGuiKey_KeypadEqual: return "KeypadEqual";
		case ImGuiKey_GamepadStart: return "GamepadStart";
		case ImGuiKey_GamepadBack: return "GamepadBack";
		case ImGuiKey_GamepadFaceUp: return "GamepadFaceUp";
		case ImGuiKey_GamepadFaceDown: return "GamepadFaceDown";
		case ImGuiKey_GamepadFaceLeft: return "GamepadFaceLeft";
		case ImGuiKey_GamepadFaceRight: return "GamepadFaceRight";
		case ImGuiKey_GamepadDpadUp: return "GamepadDpadUp";
		case ImGuiKey_GamepadDpadDown: return "GamepadDpadDown";
		case ImGuiKey_GamepadDpadLeft: return "GamepadDpadLeft";
		case ImGuiKey_GamepadDpadRight: return "GamepadDpadRight";
		case ImGuiKey_GamepadL1: return "GamepadL1";
		case ImGuiKey_GamepadR1: return "GamepadR1";
		case ImGuiKey_GamepadL2: return "GamepadL2";
		case ImGuiKey_GamepadR2: return "GamepadR2";
		case ImGuiKey_GamepadL3: return "GamepadL3";
		case ImGuiKey_GamepadR3: return "GamepadR3";
		case ImGuiKey_GamepadLStickUp: return "GamepadLStickUp";
		case ImGuiKey_GamepadLStickDown: return "GamepadLStickDown";
		case ImGuiKey_GamepadLStickLeft: return "GamepadLStickLeft";
		case ImGuiKey_GamepadLStickRight: return "GamepadLStickRight";
		case ImGuiKey_GamepadRStickUp: return "GamepadRStickUp";
		case ImGuiKey_GamepadRStickDown: return "GamepadRStickDown";
		case ImGuiKey_GamepadRStickLeft: return "GamepadRStickLeft";
		case ImGuiKey_GamepadRStickRight: return "GamepadRStickRight";
		case ImGuiKey_ModCtrl: return "ModCtrl";
		case ImGuiKey_ModShift: return "ModShift";
		case ImGuiKey_ModAlt: return "ModAlt";
		case ImGuiKey_ModSuper: return "ModSuper";
		default: return "None";
	}
}
