name: Build Cemu

on:
  workflow_call:
    inputs:
      deploymode:
        required: false
        type: string
      experimentalversion:
        required: false
        type: string

jobs:
  build-ubuntu-gcc-make:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup version for experimental
      if: ${{inputs.experimentalversion != ''}}
      run: echo "BUILD_FLAGS=-DEXPERIMENTAL_VERSION=${{inputs.experimentalversion}}" >> $GITHUB_ENV

    - name: Install system dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y build-essential cmake libgtk-3-dev libsecret-1-dev libgcrypt20-dev libsystemd-dev freeglut3-dev nasm

    - name: Cache build folder
      uses: actions/cache@v3
      with:
        path: ./GCCBuild
        key: ubuntu-gcc

    - name: Configure Cemu
      run: |
        mkdir -p GCCBuild
        cd GCCBuild
        cmake .. ${{env.BUILD_FLAGS}} -DCMAKE_BUILD_TYPE=${{inputs.deploymode}}

    - name: Build Cemu
      run: |
        cd GCCBuild
        make -j $(nproc)

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      if: ${{inputs.deploymode == 'Release'}}
      with:
        name: cemu-bin-linux-x64
        path: ./bin/Cemu_Release

  build-ubuntu-clang-ninja:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup version for experimental
      if: ${{inputs.experimentalversion != ''}}
      run: echo "BUILD_FLAGS=-DEXPERIMENTAL_VERSION=${{inputs.experimentalversion}}" >> $GITHUB_ENV

    - name: Install system dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y ninja-build cmake libgtk-3-dev libsecret-1-dev libgcrypt20-dev libsystemd-dev freeglut3-dev clang-12 nasm

    - name: Cache build folder
      uses: actions/cache@v3
      with:
        path: ./ClangBuild
        key: ubuntu-clang

    - name: Configure Cemu
      run: |
        mkdir -p ClangBuild
        cd ClangBuild
        cmake .. ${{env.BUILD_FLAGS}} -DCMAKE_BUILD_TYPE=${{inputs.deploymode}} -DCMAKE_C_COMPILER=/usr/bin/clang-12 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-12 -G Ninja -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja

    - name: Build Cemu
      run: |
        cd ClangBuild
        ninja

  build-windows-msvc-ninja:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup version for experimental
      if: ${{inputs.experimentalversion != ''}}
      run: echo "BUILD_FLAGS=-DEXPERIMENTAL_VERSION=${{inputs.experimentalversion}}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
        toolset: 14.33.31629
        spectre: false

    - name: Cache build folder
      uses: actions/cache@v3
      with:
        path: ./MSVCBuild
        key: windows-msvc

    - name: Configure Cemu
      run: |
        if not exist MSVCBuild (mkdir MSVCBuild)
        cd MSVCBuild
        cmake .. -G Ninja ${{env.BUILD_FLAGS}} -DCMAKE_BUILD_TYPE=${{env.BUILD_MODE}}

    - name: Build Cemu
      run: |
        cd MSVCBuild
        ninja

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      if: ${{inputs.deploymode == 'release'}}
      with:
        name: cemu-bin-windows-x64
        path: ./bin/Cemu_release.exe

  build-windows-clang-ninja:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup version for experimental
      if: ${{inputs.experimentalversion != ''}}
      run: echo "BUILD_FLAGS=-DEXPERIMENTAL_VERSION=${{inputs.experimentalversion}}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Setup Clang-cl
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: 12

    - name: Cache build folder
      uses: actions/cache@v3
      with:
        path: ./ClangBuild
        key: windows-clang

    - name: Configure Cemu
      run: |
        if not exist ClangBuild (mkdir ClangBuild)
        cd ClangBuild
        cmake .. -G Ninja ${{env.BUILD_FLAGS}} -DCMAKE_BUILD_TYPE=${{env.BUILD_MODE}}

    - name: Build Cemu
      run: |
        cd ClangBuild
        ninja
